 
===> 237/2/athanasius.pl <===
Running the test suite
ok 1 - Example 1: maximum greatness
ok 2 - Example 1: permutation
ok 3 - Example 2: maximum greatness
ok 4 - Example 2: permutation
ok 5 - Negatives: maximum greatness
ok 6 - Negatives: permutation
ok 7 - Mixed: maximum greatness
ok 8 - Mixed: permutation
1..8
 
===> 237/2/bob-lied.pl <===
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Empty array
ok 4 - One element
ok 5 - Opposite of great
ok 6 - Bigger numbers, sort check
1..6
 
===> 237/2/dave-jacoby.pl <===
Input:  @nums = 
    (1, 1, 1, 1, 1)
Output: 0

Input:  @nums = 
    (1, 3, 5, 2, 1, 3, 1)
Output: 4

Input:  @nums = 
    (1, 2, 3, 4)
Output: 3

 
===> 237/2/deadmarshal.pl <===
4
3
 
===> 237/2/e-choroba.pl <===
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Not great
ok 4 - More of the greater ones
ok 5 - More of the less ones
ok 6 - More of the middle ones
ok 7 - Example 1
ok 8 - Example 2
ok 9 - Not great
ok 10 - More of the greater ones
ok 11 - More of the less ones
ok 12 - More of the middle ones
1..12
 
===> 237/2/jaldhar-h-vyas.pl <===
4
 
===> 237/2/jo-37.pl <===
# Seeded srand with seed '1' from import arg.
ok 1 - example 1
ok 2 - example 2
ok 3 - can select the max
1..3
 
===> 237/2/lubos-kolouch.pl <===
1..2
ok 1 - Test Case 1
ok 2 - Test Case 2
 
===> 237/2/packy-anderson.pl <===
Example 1:
Input: @ints = (1, 3, 5, 2, 1, 3, 1)
Output: 4

One possible permutation: (2, 5, 1, 3, 3, 1, 1)
which returns 4 greatness as below:
nums[0] < perm[0]
nums[1] < perm[1]
nums[3] < perm[3]
nums[4] < perm[4]

Example 2:
Input: @ints = (1, 2, 3, 4)
Output: 3

One possible permutation: (2, 3, 4, 1)
which returns 3 greatness as below:
nums[0] < perm[0]
nums[1] < perm[1]
nums[2] < perm[2]
 
===> 237/2/peter-campbell-smith.pl <===
Output1 uses the permutations method and Output2 uses the algorithm
described in my analysis.

Input:   @nums  = (1, 3, 5, 2, 1, 3, 1)
Output1: @perms = (1, 1, 1, 3, 2, 5, 3)
      greatness = 4 (420 permutations, time 2037Î¼s)
Output2: @perms = (1, 5, 1, 3, 2, 1, 3)
      greatness = 4 (time 39Î¼s)

Input:   @nums  = (1, 2, 3, 4)
Output1: @perms = (2, 3, 4, 1)
      greatness = 3 (10 permutations, time 57Î¼s)
Output2: @perms = (2, 3, 4, 1)
      greatness = 3 (time 16Î¼s)

Input:   @nums  = (9, 6, 3, 5, 1, 0, 8, 4, 14)
Output1: @perms = (14, 8, 4, 6, 3, 1, 9, 5, 0)
      greatness = 8 (355500 permutations, time 1517452Î¼s)
Output2: @perms = (14, 8, 4, 6, 3, 1, 9, 5, 0)
      greatness = 8 (time 66Î¼s)

Input:   @nums  = (1, 2, 3, 1, 2, 3, 1, 2, 3)
Output1: @perms = (2, 3, 1, 2, 3, 1, 2, 3, 1)
      greatness = 6 (1680 permutations, time 9067Î¼s)
Output2: @perms = (2, 3, 1, 2, 3, 1, 2, 3, 1)
      greatness = 6 (time 60Î¼s)
 
===> 237/2/peter-meszaros.pl <===
ok 1 - [1, 3, 5, 2, 1, 3, 1]
ok 2 - [1, 2, 3, 4]
1..2
 
===> 237/2/polettix.pl <===
0 -> []
0
 
===> 237/2/robert-dicicco.pl <===
Input: @nums = [1 3 5 2 1 3 1]
Output: 4

Input: @nums = [1 2 3 4]
Output: 3

 
===> 237/2/roger-bell-west.pl <===
1..2
ok 1 - example 1
ok 2 - example 2
 
===> 237/2/sgreen.pl <===
0
 
===> 237/2/ulrich-rieke.pl <===
4
 
===> 237/2/wlmb.pl <===
1 3 5 2 1 3 1 -> 4
 
===> 237/2/zapwai.pl <===
Input: @nums  = (1, 3, 5, 2, 1, 3, 1)
Output: 4 
		(3, 5, 1, 3, 2, 1, 1)

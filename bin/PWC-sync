#!/usr/bin/env perl6
## copy Perl/Raku  tasks from PWC repo, using a new layout and file naming
#  2022-01-31 initial version

sub MAIN( $dir, $num ) {
    my @code;
    my @dirs = "{$dir}/challenge-{$num}".IO.absolute.IO;

    while @dirs {
        my @files = @dirs.pop;
        while @files {
            for @files.pop.dir -> $path {
                next if $path.f and $path  ~~ rx{ ['leaveme' | 'txt' | 'git' | 'snapshot' | 'version' | '.sh' | 'iangoodnight' ] };
                next if $path.f and $path  ~~ rx{ '/' ['lib'|'t'] '/' };
                next if $path.f and $path !~~ rx{ '/' ['perl'|'perl5'|'perl6'|'raku'] '/' };
                @code.push: $path if $path.f;
                @dirs.push: $path if $path.d and $path.r;
            }
        }
    }

    mkdir "$num/$_" for 1, 2;
    for @code -> $f {
        my ($vol, $dir, $fn) = IO::Spec::Unix.splitpath($f);
        my ($lang, $author) = ($dir.split('/'))[*-2,*-3];
        $lang = 'raku' if $lang eq 'perl6';
        $lang = 'perl' if $lang eq 'perl5';
        my $ext = $lang eq 'raku' ?? $fn ~~ /rakumod$/ ?? 'rakumod' !! 'raku'
                                  !! $fn ~~ /pm$/ ?? 'pm' !! 'pl';
        #warn "weird: $fn" and
        next unless $fn ~~ /^^ ch/ or $ext ~~ /['pm'|'rakumod'] $$/;

        if ($ext eq 'pm' or $ext eq 'rakumod') {
            copy $f, "./{$num}/$_/$fn" for 1, 2;
        } else {
            my $n = $fn ~~ /1/ ?? '1' !! '2';
            my $dest = "./{$num}/$n/{$author}.$ext";
            #warn "exists: $num $dir/$fn" and 
            next if $dest.IO ~~ :e;
            copy $f, $dest;
            shell qq:to/END/;
                perl -i -npe 's|^#!.*|#!/usr/bin/env $lang|; s|^use Test2::V0.*\\K;| -no_srand;|' $dest; 
                perl -i -0npe 's|^(?!#!)|#!/usr/bin/env $lang\n|' $dest; 
                flip -u $dest;
                touch -r $dir/$fn $dest;
                END
            "./{$num}/$n/{$author}.$ext".IO.chmod: '0o755';
        }
    }
}

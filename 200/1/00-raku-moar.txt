 
===> 200/1/0rir.raku <===
1..70
ok 1 - in $[] to delta
ok 2 - delta $[] to top-runs
ok 3 - top-runs $[] to sub-runs
ok 4 - sub-runs  $[] to out
ok 5 - all-steps-combined
ok 6 - in $[0, 1, 4, 9, 15] to delta
ok 7 - delta $[1, 3, 5, 6] to top-runs
ok 8 - top-runs $[] to sub-runs
ok 9 - sub-runs  $[] to out
ok 10 - all-steps-combined
ok 11 - in $[1, 2, 1] to delta
ok 12 - delta $[1, 1] to top-runs
ok 13 - top-runs $[[0, 2],] to sub-runs
ok 14 - sub-runs  $[[0, 2],] to out
ok 15 - all-steps-combined
ok 16 - in $[1, 1, 2, 1, 1] to delta
ok 17 - delta $[0, 1, 1, 0] to top-runs
ok 18 - top-runs $[[1, 3],] to sub-runs
ok 19 - sub-runs  $[[1, 3],] to out
ok 20 - all-steps-combined
ok 21 - in $[1, 2, 3, 3, 2, 1] to delta
ok 22 - delta $[1, 1, 0, 1, 1] to top-runs
ok 23 - top-runs $[[0, 2], [3, 5]] to sub-runs
ok 24 - sub-runs  $[[0, 2], [3, 5]] to out
ok 25 - all-steps-combined
ok 26 - in $[1, 1, 2, 3, 3, 2, 1, 1] to delta
ok 27 - delta $[0, 1, 1, 0, 1, 1, 0] to top-runs
ok 28 - top-runs $[[1, 3], [4, 6]] to sub-runs
ok 29 - sub-runs  $[[1, 3], [4, 6]] to out
ok 30 - all-steps-combined
ok 31 - in $[1, 1, 2, 3, 3, 2, 1] to delta
ok 32 - delta $[0, 1, 1, 0, 1, 1] to top-runs
ok 33 - top-runs $[[1, 3], [4, 6]] to sub-runs
ok 34 - sub-runs  $[[1, 3], [4, 6]] to out
ok 35 - all-steps-combined
ok 36 - in $[9, 1, 2, 3, 4, 4, 3, 2, 1, 9] to delta
ok 37 - delta $[8, 1, 1, 1, 0, 1, 1, 1, 8] to top-runs
ok 38 - top-runs $[[1, 4], [5, 8]] to sub-runs
ok 39 - sub-runs  $[[1, 3], [2, 4], [1, 4], [5, 7], [6, 8], [5, 8]] to out
ok 40 - all-steps-combined
ok 41 - in $[1, 2, 3, 4] to delta
ok 42 - delta $[1, 1, 1] to top-runs
ok 43 - top-runs $[[0, 3],] to sub-runs
ok 44 - sub-runs  $[[0, 2], [1, 3], [0, 3]] to out
ok 45 - all-steps-combined
ok 46 - in $[1, 2, 3, 4, 5] to delta
ok 47 - delta $[1, 1, 1, 1] to top-runs
ok 48 - top-runs $[[0, 4],] to sub-runs
ok 49 - sub-runs  $[[0, 2], [1, 3], [2, 4], [0, 3], [1, 4], [0, 4]] to out
ok 50 - all-steps-combined
ok 51 - in $[1, 2, 3, 4, 5, 5] to delta
ok 52 - delta $[1, 1, 1, 1, 0] to top-runs
ok 53 - top-runs $[[0, 4],] to sub-runs
ok 54 - sub-runs  $[[0, 2], [1, 3], [2, 4], [0, 3], [1, 4], [0, 4]] to out
ok 55 - all-steps-combined
ok 56 - in $[1, 1, 2, 3, 4, 5] to delta
ok 57 - delta $[0, 1, 1, 1, 1] to top-runs
ok 58 - top-runs $[[1, 5],] to sub-runs
ok 59 - sub-runs  $[[1, 3], [2, 4], [3, 5], [1, 4], [2, 5], [1, 5]] to out
ok 60 - all-steps-combined
ok 61 - in $[1, 1, 2, 3, 4, 5, 5] to delta
ok 62 - delta $[0, 1, 1, 1, 1, 0] to top-runs
ok 63 - top-runs $[[1, 5],] to sub-runs
ok 64 - sub-runs  $[[1, 3], [2, 4], [3, 5], [1, 4], [2, 5], [1, 5]] to out
ok 65 - all-steps-combined
ok 66 - in $[9, 1, 2, 3, 4, 9, 9, 1, 2, 3, 4, 5, 6, 9, 2, 1, 2] to delta
ok 67 - delta $[8, 1, 1, 1, 5, 0, 8, 1, 1, 1, 1, 1, 3, 7, 1, 1] to top-runs
ok 68 - top-runs $[[1, 4], [7, 12], [14, 16]] to sub-runs
ok 69 - sub-runs  $[[1, 3], [2, 4], [1, 4], [7, 9], [8, 10], [9, 11], [10, 12], [7, 10], [8, 11], [9, 12], [7, 11], [8, 12], [7, 12], [14, 16]] to out
ok 70 - all-steps-combined


Solving arithmetic slices with absolute deltas.

 Input: @array = 9 1 2 3 4 9 9 1 2 3 4 5 6 9 2 1 2
 Output: [(1 2 3) (2 3 4) (1 2 3 4) (1 2 3) (2 3 4) (3 4 5) (4 5 6) (1 2 3 4) (2 3 4 5) (3 4 5 6) (1 2 3 4 5) (2 3 4 5 6) (1 2 3 4 5 6) (2 1 2)]
 
===> 200/1/2colours.raku <===
(IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3")), (IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3"), IntStr.new(4, "4")), (IntStr.new(2, "2"), IntStr.new(3, "3"), IntStr.new(4, "4")), (IntStr.new(4, "4"), IntStr.new(3, "3"), IntStr.new(2, "2")), (IntStr.new(4, "4"), IntStr.new(3, "3"), IntStr.new(2, "2"), IntStr.new(1, "1")), (IntStr.new(3, "3"), IntStr.new(2, "2"), IntStr.new(1, "1"))
 
===> 200/1/arne-sommer.raku <===
(1,2,3), (1,2,3,4), (2,3,4), (4,3,2), (4,3,2,1), (3,2,1)
 
===> 200/1/athanasius.raku <===
Running the test suite
ok 1 - Example 1 
ok 2 - Example 2 
ok 3 - Evens     
ok 4 - Odds      
ok 5 - Decreasing
ok 6 - Up & down 
ok 7 - Unchanging
1..7
 
===> 200/1/bruce-gray.raku <===
(((1 2 3) (2 3 4) (1 2 3 4)))
()
 
===> 200/1/carlos-oliveira.raku <===
[(1 2 3) (2 3 4) (1 2 3 4)]
[]
 
===> 200/1/laurent-rosenfeld.raku <===
1 2 3 4    => [(1 2 3) (1 2 3 4) (2 3 4)]
2 5        => []
3 5 7 9    => [(3 5 7) (3 5 7 9) (5 7 9)]
2 5 9      => []
 
===> 200/1/luca-ferrari.raku <===
1 2 3
2 3 4
4 3 2
3 2 1
 
===> 200/1/mark-anderson.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
ok 4 - 
 
===> 200/1/pip.raku <===
(1,2,3,4) => (1,2,3), (1,2,3,4), (2,3,4)
(2      ) => () as no slice found.
 
===> 200/1/polettix.raku <===
(1,2,3), (2,3,4), (1,2,3,4)
 
===> 200/1/robert-dicicco.raku <===
Input: @array = [1 2 3 4]
Output: [1 2 3] [2 3 4] [1 2 3 4]

Input: @array = [2]
Output: ()

 
===> 200/1/roger-bell-west.raku <===
1..2
ok 1 - example 1
ok 2 - example 2
 
===> 200/1/ulrich-rieke.raku <===
(1 2 3)
(1 2 3)
(2 3 4)
(2 3 4)
(3 2 1)
(4 3 2)
(4 3 2)
(3 2 1)
(1 2 3 4)
(1 2 3 4)
(4 3 2 1)
(4 3 2 1)
 
===> 200/1/wambash.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
ok 4 - 
1..4
 
===> 200/1/zapwai.raku <===
Input: @array = (1,2,3,4)
Output: (1,2,3), (2,3,4), (1,2,3,4)

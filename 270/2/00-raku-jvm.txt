 
===> 270/2/0rir.raku <===
1..50
ok 1 - Int <- 8 ∘ 8 ∘ ()
ok 2 - Int <- 8 ∘ 8 ∘ ()
ok 3 - Int <- 8 ∘ -8 ∘ ()
ok 4 - Int <- 8 ∘ -8 ∘ ()
ok 5 - Int <- -8 ∘ 8 ∘ ()
ok 6 - Int <- -8 ∘ 8 ∘ ()
ok 7 - Int <- -8 ∘ -8 ∘ ()
ok 8 - Int <- -8 ∘ -8 ∘ ()
ok 9 - 0 <- 0 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 10 - 0 <- 0 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 11 - 0 <- 0 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 12 - 0 <- 0 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 13 - -4 <- 0 ∘ -1 ∘ (2, 3, 3, 3, 5)
ok 14 - -4 <- 0 ∘ -1 ∘ (2, 3, 3, 3, 5)
ok 15 - 1 <- 1 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 16 - 1 <- 1 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 17 - 9 <- 1 ∘ 2 ∘ (2, 3, 3, 3, 5)
ok 18 - 9 <- 1 ∘ 2 ∘ (2, 3, 3, 3, 5)
ok 19 - 9 <- 1 ∘ 3 ∘ (2, 3, 3, 3, 5)
ok 20 - 9 <- 1 ∘ 3 ∘ (2, 3, 3, 3, 5)
ok 21 - 6 <- 2 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 22 - 6 <- 2 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 23 - 23 <- 3 ∘ 5 ∘ (2, 3, 3, 3, 5)
ok 24 - 23 <- 3 ∘ 5 ∘ (2, 3, 3, 3, 5)
ok 25 - 24 <- 4 ∘ 5 ∘ (2, 3, 3, 3, 5)
ok 26 - 24 <- 4 ∘ 5 ∘ (2, 3, 3, 3, 5)
ok 27 - 29 <- 5 ∘ 6 ∘ (2, 3, 3, 3, 5)
ok 28 - 29 <- 5 ∘ 6 ∘ (2, 3, 3, 3, 5)
ok 29 - 7 <- 2 ∘ 1 ∘ (1, 2, 3, 3, 5)
ok 30 - 7 <- 2 ∘ 1 ∘ (1, 2, 3, 3, 5)
ok 31 - 11 <- 1 ∘ 2 ∘ (1, 2, 3, 3, 5)
ok 32 - 11 <- 1 ∘ 2 ∘ (1, 2, 3, 3, 5)
ok 33 - 5 <- 1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 34 - 5 <- 1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 35 - 14 <- 2 ∘ 3 ∘ (2, 3, 3, 3, 5)
ok 36 - 14 <- 2 ∘ 3 ∘ (2, 3, 3, 3, 5)
ok 37 - 9 <- 3 ∘ 2 ∘ (4, 1)
ok 38 - 9 <- 3 ∘ 2 ∘ (4, 1)
ok 39 - -9 <- -1 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 40 - -9 <- -1 ∘ 0 ∘ (2, 3, 3, 3, 5)
ok 41 - -18 <- -2 ∘ -1 ∘ (2, 3, 3, 3, 5)
ok 42 - -18 <- -2 ∘ -1 ∘ (2, 3, 3, 3, 5)
ok 43 - -18 <- -2 ∘ -3 ∘ (2, 3, 3, 3, 5)
ok 44 - -18 <- -2 ∘ -3 ∘ (2, 3, 3, 3, 5)
ok 45 - -9 <- -1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 46 - -9 <- -1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 47 - -9 <- -1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 48 - -9 <- -1 ∘ 1 ∘ (2, 3, 3, 3, 5)
ok 49 - -22 <- -2 ∘ -5 ∘ (2, 3, 3, 3, 5)
ok 50 - -22 <- -2 ∘ -5 ∘ (2, 3, 3, 3, 5)
 
===> 270/2/arne-sommer.raku <===
6
 
===> 270/2/athanasius.raku <===

Challenge 270, Task #2: Equalize Array (Raku)

Running the test suite
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Zero x
ok 4 - Zero y
ok 5 - Uniform
ok 6 - Negatives
ok 7 - Singleton
1..7
 
===> 270/2/bruce-gray.raku <===
1..2
ok 1 - X(3) Y(2) INT(4 1)
ok 2 - X(2) Y(1) INT(2 3 3 3 5)
 
===> 270/2/feng-chang.raku <===
3
 
===> 270/2/luca-ferrari.raku <===
6
 
===> 270/2/packy-anderson.raku <===
Example 1:
Input: @ints = (4, 1), $x = 3 and $y = 2
Output: 9

Level 1: i=1, so $ints[1] += 1
@ints = (4, 2)

Level 1: i=1, so $ints[1] += 1
@ints = (4, 3)

Level 1: i=1, so $ints[1] += 1
@ints = (4, 4)

We performed operation Level 1, 3 times
So the total cost would be (3 × $x) + (0 × $y) => (3 × 3) + (0 × 2) => 9

Example 2:
Input: @ints = (2, 3, 3, 3, 5), $x = 2 and $y = 1
Output: 6

Level 2: i=0, j=1, so $ints[0] += 1 and $ints[1] += 1
@ints = (3, 4, 3, 3, 5)

Level 2: i=0, j=2, so $ints[0] += 1 and $ints[2] += 1
@ints = (4, 4, 4, 3, 5)

Level 2: i=3, j=0, so $ints[3] += 1 and $ints[0] += 1
@ints = (5, 4, 4, 4, 5)

Level 2: i=1, j=2, so $ints[1] += 1 and $ints[2] += 1
@ints = (5, 5, 5, 4, 5)

Level 1: i=3, so $ints[3] += 1
@ints = (5, 5, 5, 5, 5)

We performed operation Level 1, 1 time and Level 2, 4 times
So the total cost would be (1 × $x) + (4 × $y) => (1 × 2) + (4 × 1) => 6
 
===> 270/2/roger-bell-west.raku <===
1..2
ok 1 - example 1
ok 2 - example 2

 
===> 208/1/athanasius.pl <===
Running the test suite
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
1..3
 
===> 208/1/avery-adams.pl <===
Perl
Raku
 
===> 208/1/bob-lied.pl <===
# Seeded srand with seed '1' from import arg.
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
ok 4 - list 1 empty
ok 5 - list 2 empty
ok 6 - both lists empty
ok 7 - Non-unique list
1..7
 
===> 208/1/cheok-yin-fung.pl <===
1..3
ok 1
ok 2
ok 3
 
===> 208/1/dave-jacoby.pl <===
    Input:  @list1 = "Perl","Raku","Love"
            @list2 = "Raku","Perl","Hate"
    Output: ("Perl","Raku")

    Input:  @list1 = "A","B","C"
            @list2 = "D","E","F"
    Output: ()

    Input:  @list1 = "A","B","C"
            @list2 = "C","A","B"
    Output: ("A")

 
===> 208/1/e-choroba.pl <===
# Seeded srand with seed '1' from import arg.
1..3
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
 
===> 208/1/jo-37.pl <===
# Seeded srand with seed '1' from import arg.
ok 1 - skipped test # skip examples
1..1
 
===> 208/1/laurent-rosenfeld.pl <===
Perl Raku Love - Raku Perl Hate   => Raku Perl
A B C          - D E F            => ()
A B C          - C A B            => A
 
===> 208/1/matthias-muth.pl <===
ok 1 - min_index_sum( [ Perl Raku Love ], [ Raku Perl Hate ] ) == ( Perl Raku )
ok 2 - min_index_sum( [ A B C ], [ D E F ] ) == (  )
ok 3 - min_index_sum( [ A B C ], [ C A B ] ) == ( A )
1..3
 
===> 208/1/perlboy1967.pl <===
ok 1
ok 2
ok 3
ok 4
1..4
 
===> 208/1/peter-campbell-smith.pl <===

Input:  @list1 = ("Perl", "Raku", "Love")
        @list2 = ("Raku", "Perl", "Hate")
Output: ("Raku", "Perl")

Input:  @list1 = ("A", "B", "C")
        @list2 = ("D", "E", "F")
Output: ()

Input:  @list1 = ("A", "B", "C")
        @list2 = ("C", "A", "B")
Output: ("A")

Input:  @list1 = ("b", "v", "o", "e", "t", "j", "d", "y", "p", "u", "q", "a", "y", "x", "k", "s", "z", "c", "d", "h", "l", "i", "r", "u", "i", "r", "w", "j", "m", "y", "o", "o", "f", "h", "t", "p", "n", "r", "f", "c", "g", "f", "i", "y", "x", "g", "x", "v", "y", "z", "f", "y", "o", "j", "q", "r", "e", "c", "w", "b", "h", "j", "d", "x", "x", "g", "p", "z", "t", "g", "m", "n", "k", "f", "l", "s", "r", "i", "f", "y", "h", "d", "q", "p", "k", "j", "l", "h", "j", "j", "p", "b", "z", "k", "j", "n", "o", "x", "u", "g")
        @list2 = ("l", "i", "a", "z", "j", "o", "b", "d", "f", "d", "f", "o", "i", "p", "x", "f", "a", "w", "t", "q", "n", "l", "s", "v", "z", "d", "s", "o", "h", "g", "q", "n", "c", "s", "r", "j", "o", "y", "p", "o", "y", "u", "p", "q", "j", "m", "i", "i", "p", "k", "o", "q", "z", "z", "v", "c", "f", "z", "q", "w", "s", "z", "g", "s", "l", "k", "o", "s", "a", "m", "c", "w", "s", "k", "h", "h", "q", "c", "j", "o", "q", "e", "n", "h", "u", "u", "s", "t", "t", "c", "z", "h", "w", "u", "n", "f", "m", "g", "j", "i")
Output: ("o")
 
===> 208/1/pip.pl <===
("Perl","Raku","Love") ,
("Raku","Perl","Hate") => ("Perl","Raku");
("A","B","C") ,
("D","E","F") => ();
("A","B","C") ,
("C","A","B") => ("A");
 
===> 208/1/robert-dicicco.pl <===
Input: @list1 = Perl Raku Love
       @list2 = Raku Perl Hate
Output : ('Perl' 'Raku' )

Input: @list1 = A B C
       @list2 = C A B
Output : ('A' 'B' 'C' )

Input: @list1 = A B C
       @list2 = D E F
Output : ()

 
===> 208/1/roger-bell-west.pl <===
1..3
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
 
===> 208/1/zapwai.pl <===
Input:  @list1 = (Perl, Raku, Love)
	@list2 = (Raku, Perl, Hate)
Output: (Perl, Raku)
There are 2 common strings: Perl Raku
Index sum of Perl: 0 + 1 = 1
Index sum of Raku: 1 + 0 = 1

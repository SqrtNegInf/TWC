 
===> 239/1/0rir.raku <===
1..30
ok 1 - ("",) -> ("",)
ok 2 - ("a",) -> ("a", "")
ok 3 - ("", "a", "") -> ("a", "")
ok 4 - ("a", "") -> ("a", "")
ok 5 - ("ab",) -> ("ab", "")
ok 6 - ("ab", "c") -> ("abc", "")
ok 7 - ("a", "bc") -> ("abc", "")
ok 8 - ("abc", "") -> ("abc", "")
ok 9 - ("abcd",) -> ("abc", "d", "")
ok 10 - ("abcde",) -> ("abc", "de", "")
ok 11 - ("abcde", "") -> ("abc", "de", "")
ok 12 - ("abcdef", "") -> ("abc", "def", "")
ok 13 - ("abcdefg",) -> ("abc", "def", "g", "")
ok 14 - ("a", "bc", "de", "fg") -> ("abc", "def", "g", "")
ok 15 - ("ab", "cd", "ef", "g") -> ("abc", "def", "g", "")
ok 16 - ("a", "bcdefg") -> ("abc", "def", "g", "")
ok 17 - ("ab", "cdefg") -> ("abc", "def", "g", "")
ok 18 - ("abc", "defg") -> ("abc", "def", "g", "")
ok 19 - ("abcd", "efg") -> ("abc", "def", "g", "")
ok 20 - ("abcde", "fg") -> ("abc", "def", "g", "")
ok 21 - ("abcdef", "g") -> ("abc", "def", "g", "")
ok 22 - ("", "a", "b", "", "c", "", "", "", "def", "g", "") -> ("abc", "def", "g", "")
ok 23 - join-eq: ("ab", "c")  ("a", "bc") -> True
ok 24 - by-chunks: ("ab", "c")  ("a", "bc") -> True
ok 25 - join-eq: ("ab", "c")  ("ac", "b") -> False
ok 26 - by-chunks: ("ab", "c")  ("ac", "b") -> False
ok 27 - join-eq: ("ab", "cd", "e")  ("abcde",) -> True
ok 28 - by-chunks: ("ab", "cd", "e")  ("abcde",) -> True
ok 29 - join-eq: ("", "", "")  ("",) -> True
ok 30 - by-chunks: ("", "", "")  ("",) -> True


Input: @arr1 = ["ab", "cad", "cdefghijklmno", "pqrst", "uvwx", "yz"]
       @arr2 = ["abcadcdefghijklmnopqrstuv", "", "wxyz"]
Output: True


Input: @arr1 = ["ab", "cad", "cdefghijklmno", "pqrst", "uvwx", "yz"]
       @arr2 = ["abcadcdefghijklmnopqrstuv", "N", "wxyz"]
Output: False
 
===> 239/1/arne-sommer.raku <===
true
 
===> 239/1/athanasius.raku <===
Running the test suite
ok 1 - Example 1: same
ok 2 - Example 1: word1
ok 3 - Example 1: word2
ok 4 - Example 2: same
ok 5 - Example 2: word1
ok 6 - Example 2: word2
ok 7 - Example 3: same
ok 8 - Example 3: word1
ok 9 - Example 3: word2
1..9
 
===> 239/1/barroff.raku <===
1..3
ok 1 - works for (("ab", "c"), ("a", "bc"))
ok 2 - works for (("ab", "c"), ("ac", "b"))
ok 3 - works for (("ab", "cd", "e"), ("abcde",))
 
===> 239/1/bruce-gray.raku <===
1..3
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 239/1/deadmarshal.raku <===
True
False
True
 
===> 239/1/ianrifkin.raku <===
True
False
True
 
===> 239/1/lubos-kolouch.raku <===
ok 1 - Test case 1
ok 2 - Test case 2
ok 3 - Test case 3
1..3
 
===> 239/1/luca-ferrari.raku <===
true
 
===> 239/1/mark-anderson.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 239/1/massa.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 239/1/packy-anderson.raku <===
Example 1:
Input: @arr1 = ("ab", "c")
       @arr2 = ("a", "bc")
Output: true

Using @arr1, word1 => "ab" . "c" => "abc"
Using @arr2, word2 => "a" . "bc" => "abc"

Example 2:
Input: @arr1 = ("ab", "c")
       @arr2 = ("ac", "b")
Output: false

Using @arr1, word1 => "ab" . "c" => "abc"
Using @arr2, word2 => "ac" . "b" => "acb"

Example 3:
Input: @arr1 = ("ab", "cd", "e")
       @arr2 = ("abcde")
Output: true

Using @arr1, word1 => "ab" . "cd" . "e" => "abcde"
Using @arr2, word2 => "abcde" => "abcde"
 
===> 239/1/polettix.raku <===
True
 
===> 239/1/razetime.raku <===
True
False
True
 
===> 239/1/robert-dicicco.raku <===
Input:  @arr1 = [ab c]
	@arr2 = [a bc]
Output: true

Input:  @arr1 = [ab c]
	@arr2 = [ac b]
Output: false

Input:  @arr1 = [ab cd e]
	@arr2 = [abcde]
Output: true

 
===> 239/1/roger-bell-west.raku <===
1..3
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
 
===> 239/1/ulrich-rieke.raku <===
True

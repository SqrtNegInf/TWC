 
===> 090/2/abigail.pl <===
14   12 
 7   24 ✓
 3   48 ✓
 1   96 ✓
    --- +
    168
238    13 
119    26 ✓
 59    52 ✓
 29   104 ✓
 14   208 
  7   416 ✓
  3   832 ✓
  1  1664 ✓
     ---- +
     3094
 
===> 090/2/adam-russell.pl <===
14 x 12 = 168
 
===> 090/2/alexander-karelas.pl <===
238 & 13
119 & 26
59 & 52
29 & 104
14 & 208
7 & 416
3 & 832
1 & 1664
26 + 52 + 104 + 416 + 832 + 1664 = 3094
 
===> 090/2/arne-sommer.pl <===
3094
 
===> 090/2/athanasius.pl <===
238 &   13 --> ignore
119 &   26 --> add
 59 &   52 --> add
 29 &  104 --> add
 14 &  208 --> ignore
  7 &  416 --> add
  3 &  832 --> add
  1 & 1664 --> add

238 * 13 = 26 + 52 + 104 + 416 + 832 + 1664
         = 3094
 
===> 090/2/cheok-yin-fung.pl <===
     14     16
      7     32   *
      3     64   *
      1    128   *

SUMMATION from:
     32
     64
    128
_______
    224
 
===> 090/2/colin-crain.pl <===
Input: 149 × 127

These numbers we will call m and n.
We will halve m, ignoring any remainder,
and double n until m reaches 1. At each
step along the way, if m is odd, we will
add n to the sum. When m reaches 1, the
running sum is the product of m × n

     m       n          sum

   149 |   127 |        127
-------+-------+------------
    74 |   254 |        127
    37 |   508 |        635
    18 |  1016 |        635
     9 |  2032 |       2667
     4 |  4064 |       2667
     2 |  8128 |       2667
     1 | 16256 |      18923
----------------------------
  Product:            18923
18923
18923
18923
 
===> 090/2/cristian-heredia.pl <===
The result for 14 * 12 is: 168
 
===> 090/2/dave-jacoby.pl <===

    m 17
    n 38

0	1	1	17	38
38	0	2	8	76
38	0	4	4	152
38	0	8	2	304
38	1	16	1	608
646
646
 
===> 090/2/e-choroba.pl <===
238 13	skip
119 26	add 26
59 52	add 52
29 104	add 104
14 208	skip
7 416	add 416
3 832	add 832
1 1664	add 1664
The result is 3094
 
===> 090/2/jaldhar-h-vyas.pl <===
3094
 
===> 090/2/james-smith.pl <===
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
1..10
 
===> 090/2/jo-37.pl <===
# Seeded srand with seed '1' from import arg.
ok 1 - Example 1
ok 2 - Multiply by zero
ok 3 - Multiply by one
1..3
 
===> 090/2/juliodcs.pl <===
Ethiopian multiplication of 238 and 13

Steps:
238, 13
119, 26
59, 52
29, 104
14, 208
7, 416
3, 832
1, 1664

Kepp odd numbers:
119, 26
59, 52
29, 104
7, 416
3, 832
1, 1664

Keep right values:
26
52
104
416
832
1664

Add the numbers:
3094
 
===> 090/2/laurent-rosenfeld.pl <===
3094
 
===> 090/2/lubos-kolouch.pl <===
ok 1
1..1
 
===> 090/2/nunovieira220.pl <===
168
 
===> 090/2/paulo-custodio.pl <===
3094
 
===> 090/2/perlboy1967.pl <===
231 x 13 = 3003
 
===> 090/2/polettix.pl <===
# Let's multiply A = 14 and B = 12, the Ethiopian way!
A =  14, B =  12

# Let's transfer all the even-ness from A to B
A =   7, B =  24   (*)

# Now A is odd, but we will ignore remainders for now...
A =   3, B =  48   (*)
A =   1, B =  96   (*)

# Now, we take all "B" values marked with an asterisk
A * B = 14 * 12 = 168
 
===> 090/2/roger-bell-west.pl <===
   13   238 ->   238
    6   476
    3   952 ->   952
    1  1904 ->  1904
               -----
                3094
 
===> 090/2/sgreen.pl <===
  238 ×   13
> 119 ×   26
>  59 ×   52
>  29 ×  104
   14 ×  208
>   7 ×  416
>   3 ×  832
>   1 × 1664

Result is: 26 + 52 + 104 + 416 + 832 + 1664 = 3094
 
===> 090/2/ulrich-rieke.pl <===
3094
 
===> 090/2/wanderdoc.pl <===
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
1..3
 
===> 090/2/wlmb.pl <===
	x=238	y=13
->	x=119	y=26
->	x=59	y=52
->	x=29	y=104
	x=14	y=208
->	x=7	y=416
->	x=3	y=832
->	x=1	y=1664
 238 x 13 =  0 x 13 +  1 x 26 +  1 x 52 +  1 x 104 +  0 x 208 +  1 x 416 +  1 x 832 +  1 x 1664 = 3094 (Expected: 3094)

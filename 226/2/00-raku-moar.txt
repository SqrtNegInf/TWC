 
===> 226/2/0rir.raku <===
1..6
ok 1 - Int <-- ()
ok 2 - 0 <-- [0, 0]
ok 3 - Int <-- [1, 2]
ok 4 - 1 <-- [1, 1]
ok 5 - Int <-- [1, 5, 0, 3, 5]
ok 6 - Int <-- [10, 8, 20]
 
===> 226/2/arne-sommer.raku <===
3
 
===> 226/2/athanasius.raku <===
Running the test suite
ok 1 - Example 1: min ops
ok 2 - Example 1: picks
ok 3 - Example 2: min ops
ok 4 - Example 2: picks
ok 5 - Example 3: min ops
ok 6 - Example 3: picks
1..6
 
===> 226/2/barroff.raku <===
1..3
ok 1 - works for (1, 5, 0, 3, 5)
ok 2 - works for (0)
ok 3 - works for (2, 1, 4, 0, 3)
 
===> 226/2/bruce-gray.raku <===
1..3
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 226/2/deadmarshal.raku <===
3
0
4
 
===> 226/2/jaldhar-h-vyas.raku <===
3
 
===> 226/2/laurent-rosenfeld.raku <===
1 5 0 3 5  => 3
0          => 0
2 1 4 0 3  => 4
 
===> 226/2/luca-ferrari.raku <===
3
 
===> 226/2/mark-anderson.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 226/2/packy-anderson.raku <===
Task 2: Zero Array

Example 1
Input: @ints = (1, 5, 0, 3, 5)
Output: 3

operation 1: pick 1 => (0, 4, 0, 2, 4)
operation 2: pick 2 => (0, 2, 0, 0, 2)
operation 3: pick 2 => (0, 0, 0, 0, 0)

Example 2
Input: @ints = (0)
Output: 0

Example 3
Input: @ints = (2, 1, 4, 0, 3)
Output: 4

operation 1: pick 1 => (1, 0, 3, 0, 2)
operation 2: pick 1 => (0, 0, 2, 0, 1)
operation 3: pick 1 => (0, 0, 1, 0, 0)
operation 4: pick 1 => (0, 0, 0, 0, 0)
 
===> 226/2/polettix.raku <===
3
 
===> 226/2/robert-dicicco.raku <===
Input: @ints = [1 5 0 3 5]
operation 1: pick 1 [0 4 0 2 4]
operation 2: pick 2 [0 2 0 0 2]
operation 3: pick 2 [0 0 0 0 0]
Output: 3

Input: @ints = [0]
Output: 0

Input: @ints = [2 1 4 0 3]
operation 1: pick 1 [1 0 3 0 2]
operation 2: pick 1 [0 0 2 0 1]
operation 3: pick 1 [0 0 1 0 0]
operation 4: pick 1 [0 0 0 0 0]
Output: 4

 
===> 226/2/roger-bell-west.raku <===
1..3
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
 
===> 226/2/ulrich-rieke.raku <===
3
 
===> 226/2/wambash.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
1..3

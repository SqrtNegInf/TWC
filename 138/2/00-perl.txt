 
===> 138/2/abigail.pl <===
1
1
0
 
===> 138/2/athanasius.pl <===
Input:  $n = 9801 (sqrt 99)
Output: 1

Since "9801" can be split into 98 + 0 + 1 = 99
 
===> 138/2/bruce-gray.pl <===
1..11
ok 1 - can_partition_to_sqrt(81) == 1
ok 2 - can_partition_to_sqrt(9801) == 1
ok 3 - can_partition_to_sqrt(36) == 0
ok 4 - can_partition_to_sqrt(5184) == 0
ok 5 - can_partition_to_sqrt(1296) == 1
ok 6 - can_partition_to_sqrt(27425678449) == 0
ok 7 - can_partition_to_sqrt(1058751978965168049) == 0
ok 8 - can_partition_to_sqrt(1058751981023081536) == 1
ok 9 - can_partition_to_sqrt(1058751983080995025) == 0
ok 10 - Exact match of https://oeis.org/A038206
ok 11 - Exact match of https://oeis.org/A104113
 
===> 138/2/cheok-yin-fung.pl <===
1..6
0
sqrt(81) = 9 = 8 + 1
ok 1 - Example 1
sqrt(9801) = 99 = 98 + 1
ok 2 - Example 2
ok 3 - Example 3
sqrt(998001) = 999 = 998 + 1
ok 4 - test case 1 with 10^n-1
sqrt(99980001) = 9999 = 9998 + 1
ok 5 - test case 2 with 10^n-1
sqrt(17073424) = 4132 = 1 + 707 + 3424
ok 6 - final test
 
===> 138/2/dave-jacoby.pl <===
	1	1
	0	4
	0	9
	0	16
	0	25
	0	36
	0	49
	0	64
	1	81
	1	100
	0	121
	0	144
	0	169
	0	196
	0	225
	0	256
	0	289
	0	324
	0	361
	0	400
	0	441
	0	484
	0	529
	0	576
	0	625
	0	676
	0	729
	0	784
	0	841
	0	900
	0	961
	0	1024
	0	1089
	0	1156
	0	1225
	1	1296
	0	1369
	0	1444
	0	1521
	0	1600
	0	1681
	0	1764
	0	1849
	0	1936
	1	2025
	0	2116
	0	2209
	0	2304
	0	2401
	0	2500
	0	2601
	0	2704
	0	2809
	0	2916
	1	3025
	0	3136
	0	3249
	0	3364
	0	3481
	0	3600
	0	3721
	0	3844
	0	3969
	0	4096
	0	4225
	0	4356
	0	4489
	0	4624
	0	4761
	0	4900
	0	5041
	0	5184
	0	5329
	0	5476
	0	5625
	0	5776
	0	5929
	0	6084
	0	6241
	0	6400
	0	6561
	1	6724
	0	6889
	0	7056
	0	7225
	0	7396
	0	7569
	0	7744
	0	7921
	0	8100
	1	8281
	0	8464
	0	8649
	0	8836
	0	9025
	0	9216
	0	9409
	0	9604
	1	9801
	1	10000
 
===> 138/2/e-choroba.pl <===
# Seeded srand with seed '1234' from import arg.
1..3
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
 
===> 138/2/james-smith.pl <===
ok 1
ok 2
ok 3
1..3
 
===> 138/2/jo-37.pl <===
# Seeded srand with seed '1234' from import arg.
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
ok 4 - without zeros
ok 5 - not a square
ok 6 - zero
ok 7 - double zero
ok 8 - one
ok 9 - one with leading zero
ok 10 - one with leading zeros
ok 11 - leading zero
ok 12 - non-numeric
1..12
 
===> 138/2/laurent-rosenfeld.pl <===
    1	1
27 is not a perfect square

   27	0
   81	1
  100	1
  225	0
 1296	1
 6561	0
 9801	1
 
===> 138/2/lubos-kolouch.pl <===
ok 1
ok 2
ok 3
1..3
 
===> 138/2/paulo-custodio.pl <===
1
 
===> 138/2/pete-houston.pl <===
1
 
===> 138/2/polettix.pl <===
81
100
1296
2025
3025
6724
8281
9801
10000
55225
88209
136161
136900
143641
171396
431649
455625
494209
571536
627264
826281
842724
893025
929296
980100
982081
998001
1000000
 
===> 138/2/wlmb.pl <===
Input: 81 Output: 1 as 8+1=9
Input: 9801 Output: 1 as 98+01=98+0+1=99
Input: 36 Output: 0

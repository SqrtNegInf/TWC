 
===> 261/2/0rir.raku <===
1..6
ok 1 - Int <- 3 <- 
ok 2 - 0 <- 0 <- 1
ok 3 - 3 <- 3 <- 1
ok 4 - 24 <- 3 <- 5 3 6 1 12
ok 5 - 2 <- 2 <- 5 6 7
ok 6 - 8 <- 1 <- 1 2 4 3

Input: $ints = $(2, 4, 24, 48, 3, 5, 6, 7, 5, 3, 95, 6, 12, 96) and $start = 3
Output: 192
 
===> 261/2/arne-sommer.raku <===
24
 
===> 261/2/ash.raku <===
24
8
2
 
===> 261/2/asherbhs.raku <===
24
8
2
 
===> 261/2/athanasius.raku <===

Challenge 261, Task #2: Multiply by Two (Raku)

Running the test suite
ok 1 - Example 1
ok 2 - Example 2
ok 3 - Example 3
ok 4 - Negatives
ok 5 - Repetitions
ok 6 - Zero start
ok 7 - Empty list
1..7
 
===> 261/2/barroff.raku <===
1..3
ok 1 - works for 3 and (5, 3, 6, 1, 12)
ok 2 - works for 1 and (1, 2, 4, 3)
ok 3 - works for 2 and (5,6,7)
 
===> 261/2/bruce-gray.raku <===
1..9
ok 1 - 
ok 2 - 
ok 3 - 
ok 4 - 
ok 5 - 
ok 6 - 
ok 7 - 
ok 8 - 
Infinite loop avoided; no doubling of startpoint (0) will ever fall outside of the given @ns: (5 6 7 0)
ok 9 - 
 
===> 261/2/feng-chang.raku <===
12
 
===> 261/2/jaldhar-h-vyas.raku <===
24
 
===> 261/2/laurent-rosenfeld.raku <===
3 - 5 3 6 1 12      => 24
1 - 1 2 4 3         => 8
2 - 5 6 7           => 2
 
===> 261/2/luca-ferrari.raku <===
24
 
===> 261/2/mark-anderson.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 261/2/packy-anderson.raku <===
Example 1:
Input: @ints = (5, 3, 6, 1, 12) and $start = 3
Output: 24

Step 1: 3 is in the array so 3 x 2 = 6
Step 2: 6 is in the array so 6 x 2 = 12
Step 3: 12 is in the array so 12 x 2 = 24
24 is not in the array so return 24.

Example 2:
Input: @ints = (1, 2, 4, 3) and $start = 1
Output: 8

Step 1: 1 is in the array so 1 x 2 = 2
Step 2: 2 is in the array so 2 x 2 = 4
Step 3: 4 is in the array so 4 x 2 = 8
8 is not in the array so return 8.

Example 3:
Input: @ints = (5, 6, 7) and $start = 2
Output: 2

2 is not in the array so return 2.
 
===> 261/2/roger-bell-west.raku <===
1..3
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
 
===> 261/2/ulrich-rieke.raku <===
24
 
===> 261/2/wambash.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
ok 4 - 
1..4

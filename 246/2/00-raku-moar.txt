 
===> 246/2/0rir.raku <===
P 1   Q 1   Ary:  [2, 3, 5, 8, 13, 21]
 
===> 246/2/arne-sommer.raku <===
true
 
===> 246/2/athanasius.raku <===
Running the test suite
ok 1 - Example 1: p
ok 2 - Example 1: q
ok 3 - Example 2: p
ok 4 - Example 2: q
ok 5 - Example 3: p
ok 6 - Example 3: q
ok 7 - Example 3a: p
ok 8 - Example 3a: q
ok 9 - Run of same: p
ok 10 - Run of same: q
ok 11 - Zero b: p
ok 12 - Zero b: q
ok 13 - Large 1: p
ok 14 - Large 1: q
ok 15 - Large 1a: p
ok 16 - Large 1a: q
1..16
 
===> 246/2/bruce-gray.raku <===
1..10
ok 1 - task2a - 1 1...
ok 2 - task2a - 4 2...
ok 3 - task2a - 4 1...
ok 4 - task2a - 5 7...
ok 5 - task2a - 24 24...
ok 6 - task2b - 1 1...
ok 7 - task2b - 4 2...
ok 8 - task2b - 4 1...
ok 9 - task2b - 5 7...
ok 10 - task2b - 24 24...
 
===> 246/2/laurent-rosenfeld.raku <===
1 1 2 3 5    => True:  p = 1, q = 1
4 2 4 5 7    => False
4 1 2 -3 8   => True:  p = 1, q = -2
 
===> 246/2/lubos-kolouch.raku <===
1..3
ok 1 - Fibonacci sequence
ok 2 - Even-odd mismatch
ok 3 - Custom sequence
true
 
===> 246/2/luca-ferrari.raku <===
True
 
===> 246/2/mark-anderson.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 246/2/massa.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
 
===> 246/2/packy-anderson.raku <===
Example 1:
Input: @a = (1, 1, 2, 3, 5)
Found integer values for P (1) and Q (1)
Output: True

Example 2:
Input: @a = (4, 2, 4, 5, 7)
Values for P (0.5) and Q (1) for first four elements are not integers
Output: False

Example 3:
Input: @a = (4, 1, 2, -3, 8)
Found integer values for P (1) and Q (-2)
Output: True
 
===> 246/2/roger-bell-west.raku <===
1..3
ok 1 - example 1
ok 2 - example 2
ok 3 - example 3
 
===> 246/2/wambash.raku <===
ok 1 - 
ok 2 - 
ok 3 - 
ok 4 - 
ok 5 - 
ok 6 - 
ok 7 - 
ok 8 - 
1..8
